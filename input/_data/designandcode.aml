title: On design and code
date: 3/28/24
host: <a href="https://portal.cca.edu/courses/sec/GRAPH-2120-2_AP_Spring_2024/" target="_blank">CCA GD Interactive 1</a>

[+scenes]

{.step}
    [.+text]
        \*Hellos, thank yous and pleasantries\*
    []
{}

{.step}
    [.+text]
        So I graduated from Parsons in Fall of 2022, where I actually took a class taught by Roon, which is similar to the one that you all are taking with him now! 

        This is a project I did for that class, where I built this website to view and filter a collection of poetry written by Shakespeare.
    []
{}

{.step}
    [.+text]
        Today I’m going to show you some of my projects and try to walk you through some of the ways that I think about the relationship between these two things in my practice.
    []
{}

{.step}
    [.+text]
        To start off, currently I’m doing a one-year fellowship at The New York Times, on the Digital News Design team. 
    []
{}

{.step}
    [.+text]
        When you think of The New York Times’ digital presence, this is what you might picture; the basic template used by ~90% of articles published by the Times. It works really well and has a lot of customization options.

        But this template is actually designed and maintained by a completely different group of product designers on the business side of the company.

        When it comes to design and code, the product team has a more traditionally separated structure: the designers prototype pages, and then a team of software engineers implements them.
    []
{}

{.step}
    [.+text]
        In addition, the product team is outside of the newsroom. That means they usually don’t work directly with writers and editors on individual stories. Instead, there’s a content management system that allows the newsroom to publish articles from a template with a set of options.
    []
{}

{.step}
    [.+text]
        By contrast, the Digital News Design team is embedded inside of the newsroom, and we work on producing individual stories from start to finish. It’s a relatively small team, and we program all of our own projects.

        In essence, the team exists to break out of the normal article template, when something can be done with the visual and interactive presentation to enhance a reader’s experience. I think of basically two ways that we intervene in projects
    []
{}

{.step}
    [.+text]
        The first is when something about the structure of the story, as its given to us by writers and editors, would be easier and more engaging to navigate in a custom format.
    []
{}

{.step}
    [.+text]
        So for example, I worked on the 52 Places list, which is an article the travel desk puts out every year suggesting 52 places to visit. Since it has this well-defined list structure, we can make it easier to browse and emphasize the photography for each location.
    []
{}

{.step}
    [.+text]
        As another example, this is a politics story I worked on where the reporter went through every candidate in the Republican presidential primary and analyzed their position on different policy issues.

        Our role in this story was creating a format where you can easily browse and filter the positions of each candidate. 
    []
{}

{.step}
    [.+text]
        On the other hand, sometimes we as designers and editors come up with formats that change the way that a story is written or structured.
    []
{}

{.step}
    [.+text]
        So this is a story about two research laboratories in Silicon Valley that invented many of the basic elements of modern computers in the 60s and 70s, like the computer mouse, the internet, and graphic user interfaces. 

        The desk editors came to us because they thought it could be interesting to include a timeline of historic milestones, although they weren’t sure how it would integrate with the rest of the article.

        As the designers we thought through how to place it inside of the story, what events could be included, and what imagery we could use. Then we collaborated with the editors and the writer to rewrite and add to the story so it fit with the format.
    []
{}

{.step}
    [.+text]
        You see the same idea in this story about the 50th anniversary of The Exorcist film.

        In this case, the primary designer (Tala Safie) and the editors on the culture desk came up with this idea to contrast the reactions people had to the movie when it came out (which you can see on the white background) with new interpretations of it from New York Times film critics (which you can see in the black). 

        For the reactions, Tala spent a lot of time with the photo editor going through old news clippings and videos to source the quotes and media that made it into the piece.
    []
{}

{.step}
    [.+text]
    What I’m getting at is, especially in these latter cases, having complete control over the production and visual presentation via coding empowers our team not only to break out of the existing templates, but to create new “templates” and workflows that shape the output of writers and editors. 
    []
{}

{.step}
    [.+text]
    The next idea that I want to urge you to consider is that there’s a kind of continuity between graphic design and programming, to the point that you can consider them two parts of a single process.
    []
{}

{.step}
    [.+text]
    This is the desktop version of the 52 places article I showed you earlier. As you can see, there’s a design system for each location, with a typographic and visual hierarchy for information about each location.
    []
{}

{.step}
    [.+text]
    Analogously, on the programming side we have to design a hierarchy and a data structure that allows the machine to treat different pieces of information differently.

    So for this article, we wrote a program that reads text from the New York Times content management system, where the editors were working, and converts it into the HTML / CSS / JavaScript output you saw just now. 

    You can also see we added a way for the editors to add a set of tags to each location
    []
{}

{.step}
    [.+text]
        Then in the interface, we were able to take that encoded information and build a function to filter the locations by those tags.

        Both design and programming, then, are concerned with figuring out how to logically structure information and make it legible. 
    []
{}

{.step}
    [.+text]
    Additionally, both design and programming involve coming up with creative resolutions to problems within a set of given constraints.

    For example in this piece, I had to figure out how to achieve this “curtain” effect where one element stays in place while another element slides over it. I drew this diagram to help work out the math that would be involved.
 
    Particularly in web development, you’re constantly manipulating geometry and applying the tools of HTML and CSS to achieve unconventional outputs.
    []
{}

{.step}
    [.+text]
    That brings me to my next idea, which is that the constraints imposed by programming languages and the web can creatively inform your work.
    []
{}

{.step}
    [.+text]
    Moving away from NYT work, this is a freelance web design project I’m working on with my friend Patrick. The site presents a multimedia “manifesto” made up of artworks and statements produced during a set of workshops. Here you’re seeing some static mocks we’ve produced so far in Figma.
    []
{}

{.step}
    [.+text]
    The manifesto uses the metaphor of “glitching” to suggest ways that artists can transcend social, political and technical barriers. Patrick and I thought it would be interesting to try to bring that motif into the web design through the ways that pages transition. 
    
    At some point I moved to code and started testing out our ideas for this in a live canvas. WebGL allowed us to animate the images with displacement maps and progressive pixelation. And for the text I came up with this idea to flash the words on different pages on and off in a random sequence.

    You can see here that programming allowed us to explore possibilities that are beyond the constraints of what you can achieve, at least quickly, in traditional design tools like Figma or Adobe software. And we could test it quickly and dynamically with different types of content, without having to do a bunch of clicking and dragging.
    []
{}

{.step}
    [.+text]
    As I hope all these examples have been demonstrating, a driving principle in my work is using code as a way to break out of or introduce new creative constraints in projects.
    []
{}

{.step}
    [.+text]
    I think the tools and templates that we adopt condition the types of work we're able to produce or even imagine.
    []
{}

{.step}
    [.+text]
    To me, being a programmer means considering the tools that I use in my work and my life as part of my practice, rather than external constraints.
    []
{}

{.step}
    [.+text]
    Here is another project I did in school, for a class where we learned how to write [shaders](https://thebookofshaders.com/) with webGL. It calculates “signed distance fields” which record the shortest distance of each pixel from an input that you provide, and use that data to visualize waves and lines projecting out of type and abstract shapes.
    
    I was interesting in introducing a new functionality that expands what’s possible to do easily in existing design software.
    []
{}

{.step}
    [.+text]
    After building the tool I shared it with a group of friends, and had them design posters with it that I printed on a risograph machine.

    []
{}

{.step}
    [.+text]
    Going beyond design tooling, I’ve been concerned for a long time with how the social interfaces we all use condition our behavior and impose toxic constraints on the way that we interact online.
    []
{}

{.step}
    [.+text]
    Designing and programming my personal website allows me to escape those platform constraints and come up with new avenues for expressing myself and publishing work.
    []
{}

{.step}
    [.+text]
    For example, I built a template for my writing that allows me to incorporate custom elements like sliding image galleries and interactive footnotes, which then shape the way that I write.
    []
{}

{.step}
    [.+text]
    I also built this template that allows me to build custom collections of different text and media. I use these to share and catalog a wide variety of things, and I’ve built custom integrations for it, like [one page](https://nicochilla.com/notes-and-correspondence/) that pulls from an are.na channel.
    []
{}

{.step}
    [.+text]
    Thanks so much for having me! Feel free to [get in touch](mailto:jnico.chilla@gmail.com) with any thoughts or questions.
    []
{}



[]


[+stage_elements]
{.heading}
        text: Design and code
        entry:0
        exit:0
        col: 3 / 10
        row: 3 / 7
        textalign:start
        align:start
{}
{.heading}
        text: Design of code
        entry:0
        exit:0
        col: 4 / 10
        row: 4 / 5
        textalign:start
        align:start
{}
{.heading}
        text: Designing in code
        entry:0
        exit:0
        col: 5 / 10
        row: 5 / 6
        textalign:start
        align:start
{}
{.heading}
        text: Code expands design
        entry:0
        exit:0
        col: 6 / 11
        row: 6 / 7
        textalign:start
        align:start
{}

{.heading}
        text: Hi!
        entry:1
        exit:1
        col: 2 / 12
        row: 2 / 3
    {}

{.media}
    entry:2
    exit:2
    col: 3 / 11
    row: 3 / 8
    src: sonnets
    type: video
    caption: Nico’s work in Roon’s class circa 2020
{}

{.heading}
    text: Design and code
    entry:3
    exit:3
    col: 3 / 10
    row: 3 / 7
    textalign:start
    align:start
{}

{.media}
    entry:4
    exit:4
    col: 2 / 8
    row: 2 / 8
    src: tusk-room
    type: image
    effects: video
    caption:
{}

{.text}
    [.+text]
        Standard article template, designed by product team
    []
    entry:5
    exit:5
    col: 2 / 6
    row: 2 / 8
    align:start
{}

{.media}
    entry:5
    exit:6
    col: 7 / 12
    row: 2 / 8
    src: species-screenshot
    type: image
    effects: video
    caption: From [What Is a Species, Anyway?](https://www.nytimes.com/2024/02/19/science/what-is-a-species.html) by Carl Zimmer
{}


{.media}
    entry:6
    exit:6
    col: 2 / 7
    row: 2 / 8
    src: what-is-a-species-cms
    type: image
    effects: video
    caption: NYT’s Oak text editor
{}

{.text}
    [.+text]
        Digital News Design designs, edits, and programs individual stories.
    []
    entry:7
    exit:7
    col: 3 / 9
    row: 4 / 8
    align:start
{}

{.text}
    [.+text]
        Our role is to enhance or break out of the standard template.
    []
    entry:7
    exit:7
    col: 4 / 9
    row: 5 / 8
    align:start
{}



{.text}
    [.+text]
        Scenario 1: the story content could benefit from a custom design
    []
    entry:8
    exit:8
    col: 2 / 12
    row: 2 / 8
    align:start
{}

{.media}
    entry:9
    exit:9
    col: 5 / 9
    row: 2 / 8
    src: 52places-mobile
    type: video
    caption: [52 places to Go in 2024](https://www.nytimes.com/interactive/2024/travel/places-to-travel-destinations-2024.html), produced by Nico Chilla and Gabriel Gianordoli.
{}

{.media}
    entry:10
    exit:10
    col: 2 / 12
    row: 2 / 8
    src: gop-positions
    type: video
    caption: [GOP Candidates issue tracker](https://www.nytimes.com/interactive/2023/08/18/us/politics/republican-candidates-2024-issues.html), produced by Nico Chilla and Rebecca Lieberman 
{}

{.text}
    [.+text]
        Scenario 2: the design itself shapes the structure of the story
    []
    entry:11
    exit:11
    col: 2 / 12
    row: 2 / 8
    align:start
{}

{.media}
    entry:12
    exit:12
    col: 2 / 12
    row: 2 / 8
    src: parc-sri
    type: video
    caption: [Can Xerox’s PARC, a Silicon Valley Icon, Find New Life with SRI?](https://www.nytimes.com/interactive/2024/03/26/business/silicon-valley-tech-xerox-parc-sri.html), produced by Nico Chilla and Aliza Aufrichtig
{}

{.media}
    entry:13
    exit:13
    col: 2 / 12
    row: 2 / 8
    src: exorcist-from-top
    type: video
    caption: [Reconsidering ‘The Exorcist’ at 50](https://www.nytimes.com/interactive/2023/10/17/movies/the-exorcist-50th-anniversary.html), designed by Tala Safie and developed by Nico Chilla
{}

{.heading}
    text: Design of code
    entry:15
    exit:15
    col: 4 / 10
    row: 4 / 5
    textalign:start
    align:start
{}

{.media}
    entry:16
    exit:16
    col: 2 / 12
    row: 2 / 8
    src: 52places-scrollthrough
    type: video
    caption: [52 places to Go in 2024](https://www.nytimes.com/interactive/2024/travel/places-to-travel-destinations-2024.html), produced by Nico Chilla and Gabriel Gianordoli.
{}

{.media}
    entry:17
    exit:17
    col: 4 / 10
    row: 2 / 8
    src: 52places-oak
    type: image
    effects: video
    caption: 
    
{}

{.media}
    entry:18
    exit:18
    col: 2 / 12
    row: 2 / 8
    src: 52places-tags
    type: video
    caption: 
{}

{.media}
    entry:19
    exit:19
    col: 8 / 12
    row: 2 / 8
    src: exorcist-slideover-mobile
    type: video
    effects: video
    caption: 
    align:end
{}

{.media}
    entry:19
    exit:19
    col: 2 / 7
    row: 2 / 8
    src: exorcist-sticky-curtain
    type: image
    effects: video
    caption: 
    
{}

{.heading}
        text: Designing in code
        entry:20
        exit:20
        col: 5 / 10
        row: 5 / 6
        textalign:start
        align:start
{}

{.media}
    entry:21
    exit:21
    col: 2 / 12
    row: 2 / 8
    src: glitch-border-manifesto-figma
    type: video
    caption: Work-in-progress Figma sketches designed with Patrick Yang MacDonald
{}

{.media}
    entry:22
    exit:22
    col: 2 / 12
    row: 2 / 8
    src: glitch-border-manifesto-tests
    type: video
    caption: Live-testing glitchy transitions in the browser
{}

{.heading}
        text: Code expands design
        entry:23
        exit:23
        col: 6 / 11
        row: 6 / 7
        textalign:start
        align:start
{}

{.text}
    entry:24
    exit:24
    col: 2 / 11
    row: 2 / 7
    [.+text]
     The tools we use condition our output.
    []
{}

{.text}
    entry:25
    exit:25
    col: 2 / 11
    row: 2 / 7
    [.+text]
     For me, being a programmer means considering the tools that I use in my work and my life as part of my practice, rather than external constraints.
    []
{}

{.media}
    entry:26
    exit:26
    col: 2 / 12
    row: 2 / 8
    src: sdf-poster-maker
    type: video
    caption: [Signed distance field poster generator](https://work.nicochilla.com/shaders/sdf-posters/)

{}

{.grid-loop}
    entry:27
    exit:27
    [.items]
        src: sdf-poster-live-love-laugh
        type: image
        effects: video
        col: 2 / 7
        row: 2 / 8
        caption: By Nico

        src: sdf-poster-patrick
        type: image
        effects: video
        col: 7 / 12
        row: 2 / 8
        caption: By Patrick
    []    
{}

{.text}
    entry:28
    exit:28
    col: 2 / 11
    row: 3 / 7
    [.+text]
     recommendation feeds
    []
{}

{.text}
    entry:28
    exit:28
    col: 8 / 12
    row: 4 / 7
    [.+text]
     advertisements and grift
    []
{}

{.text}
    entry:28
    exit:28
    col: 7 / 11
    row: 6 / 7
    [.+text]
     closed ecosystems
    []
{}



{.text}
    entry:28
    exit:28
    col: 7 / 11
    row: 2 / 7
    [.+text]
     data surveillance
    []
{}

{.text}
    entry:28
    exit:28
    col: 3 / 8
    row: 5 / 7
    [.+text]
     shallow thresholds of engagement
    []
    textalign:end
{}

{.text}
    entry:28
    exit:28
    col: 4 / 11
    row: 7 / 8
    [.+text]
     decontextualized imagery
    []
{}





{.media}
    entry:29
    exit:29
    col: 2 / 12
    row: 2 / 8
    src: homepage
    type: video
    caption:
{}

{.media}
    entry:30
    exit:30
    col: 2 / 12
    row: 2 / 8
    src: home-article
    type: image
    effects: video
    caption:
{}

{.media}
    entry:31
    exit:31
    col: 2 / 12
    row: 2 / 8
    src: collections
    type: video
    caption:
{}


{.heading}
    text: Thanks!
    entry:32
    exit:32
    col: 2 / 12
    row: 7 / 8
    textalign:end
    align:end
{}



[]